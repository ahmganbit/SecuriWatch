apiVersion: v1
kind: Namespace
metadata:
  name: securitywatch
  labels:
    name: securitywatch

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: securitywatch-config
  namespace: securitywatch
data:
  FLASK_ENV: "production"
  PYTHONUNBUFFERED: "1"

---
apiVersion: v1
kind: Secret
metadata:
  name: securitywatch-secrets
  namespace: securitywatch
type: Opaque
data:
  # Base64 encoded values - replace with actual secrets
  postgres-password: c2VjdXJpdHl3YXRjaF9zZWN1cmVfcGFzc3dvcmQ=  # securitywatch_secure_password

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: securitywatch-data
  namespace: securitywatch
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: securitywatch-web
  namespace: securitywatch
  labels:
    app: securitywatch-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: securitywatch-web
  template:
    metadata:
      labels:
        app: securitywatch-web
    spec:
      containers:
      - name: securitywatch-web
        image: securitywatch:latest
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: securitywatch-config
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: securitywatch-secrets
              key: postgres-password
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/stats
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/stats
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: securitywatch-data
      - name: logs-volume
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: securitywatch-monitor
  namespace: securitywatch
  labels:
    app: securitywatch-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: securitywatch-monitor
  template:
    metadata:
      labels:
        app: securitywatch-monitor
    spec:
      containers:
      - name: securitywatch-monitor
        image: securitywatch:latest
        command: ["python", "securitywatch_cli.py", "start", "--daemon"]
        envFrom:
        - configMapRef:
            name: securitywatch-config
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: securitywatch-data
      - name: logs-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: securitywatch-web-service
  namespace: securitywatch
spec:
  selector:
    app: securitywatch-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: securitywatch-ingress
  namespace: securitywatch
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - securitywatch.yourdomain.com
    secretName: securitywatch-tls
  rules:
  - host: securitywatch.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: securitywatch-web-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: securitywatch-web-hpa
  namespace: securitywatch
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: securitywatch-web
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
